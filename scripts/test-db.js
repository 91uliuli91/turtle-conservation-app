// Script para probar las funciones de base de datos directamente
// Ejecutar con: node scripts/test-db.js

const { testConnection, query } = require('../src/app/lib/db.ts');

async function runTests() {
  console.log('üöÄ Iniciando pruebas de base de datos...\n');

  try {
    // Test 1: Probar conexi√≥n
    console.log('1Ô∏è‚É£ Probando conexi√≥n...');
    const isConnected = await testConnection();
    console.log(`Resultado: ${isConnected ? '‚úÖ Conectado' : '‚ùå Error de conexi√≥n'}\n`);

    if (!isConnected) {
      console.log('‚ùå No se puede continuar sin conexi√≥n');
      return;
    }

    // Test 2: Query simple
    console.log('2Ô∏è‚É£ Ejecutando query simple...');
    const timeResult = await query('SELECT NOW() as current_time');
    console.log('‚úÖ Tiempo actual:', timeResult.rows[0].current_time);

    // Test 3: Listar tablas
    console.log('\n3Ô∏è‚É£ Listando tablas de la base de datos...');
    const tablesResult = await query(`
      SELECT tablename 
      FROM pg_tables 
      WHERE schemaname = 'public'
    `);
    console.log('üìã Tablas encontradas:', tablesResult.rows.map(row => row.tablename));

    // Test 4: Informaci√≥n de la base de datos
    console.log('\n4Ô∏è‚É£ Informaci√≥n de la base de datos...');
    const dbInfo = await query('SELECT version()');
    console.log('üî¢ Versi√≥n de PostgreSQL:', dbInfo.rows[0].version);

  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error);
  } finally {
    process.exit();
  }
}

runTests();